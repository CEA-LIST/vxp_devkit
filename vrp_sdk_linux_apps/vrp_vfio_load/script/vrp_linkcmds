/**
* Copyright 2023 CEA Commissariat a l'Energie Atomique et aux Energies Alternatives (CEA)
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
**/
/**
 * @file   linkcmds
 * @author Riccardo ALIDORI
 */
OUTPUT_ARCH(riscv)
ENTRY(_start)

MEMORY
{
  RAM_UNCACHED : ORIGIN = __ADDR_RAM_UNCACHED__, LENGTH = 2M
  RAM_CACHED   : ORIGIN = __ADDR_RAM_CACHED__, LENGTH = __RAM_SIZE__ - 2M
}

SECTIONS
{
    .text :
    {
        . = ALIGN(8) ;
        _stext = . ;
        *(.start .start.*)
        KEEP(*(.vectors .vector.*)) ;
        *(.text .text.*) ;
        *(.rodata .rodata* .srodata .srodata*) ;
        . = ALIGN(8) ;
    } > RAM_CACHED

    .preinit_array    :
    {
        PROVIDE_HIDDEN (__preinit_array_start = .);
        KEEP (*(.preinit_array))
        PROVIDE_HIDDEN (__preinit_array_end = .);
    } > RAM_CACHED
    .init_array    :
    {
        PROVIDE_HIDDEN (__init_array_start = .);
        KEEP (*(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*)))
        KEEP (*(.init_array .ctors))
        PROVIDE_HIDDEN (__init_array_end = .);
    } > RAM_CACHED
    .fini_array    :
    {
        PROVIDE_HIDDEN (__fini_array_start = .);
        KEEP (*(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*)))
        KEEP (*(.fini_array .dtors))
        PROVIDE_HIDDEN (__fini_array_end = .);
    } > RAM_CACHED
    .ctors          :
    {
        KEEP (*(SORT(.ctors.*)))
        KEEP (*(.ctors))
    } > RAM_CACHED
    .dtors          :
    {
        KEEP (*(SORT(.dtors.*)))
        KEEP (*(.dtors))
        _etext = . ;
    } > RAM_CACHED

    .data.cached :
    {
        . = ALIGN(8) ;
        _sdata_cached = . ;
        . = ALIGN(8) ;
        *(.data.cached) ;
        . = ALIGN(8) ;
        _edata_cached = . ;
    } > RAM_CACHED

    .stack (NOLOAD) :
    {
        KEEP(*(_sstack _estack))
        . = ALIGN(8) ;
    } > RAM_CACHED

    .heap (NOLOAD) :
    {
        . = ALIGN(8) ;
        _end = . ;
    } > RAM_CACHED

    .host :
    {
        *(.host .host.*) ;
    } > RAM_UNCACHED

    .data :
    {
        . = ALIGN(8) ;
        _sdata = . ;
        *(.data .data.* .sdata .sdata*) ;
        . = ALIGN(8) ;
        _edata = . ;
    } > RAM_UNCACHED

    .bss (NOLOAD) :
    {
        . = ALIGN(8) ;
        _sbss = . ;
        *(.bss .bss.* .sbss .sbss*) ;
        *(COMMON) ;
        . = ALIGN(8) ;
        _ebss = . ;
    } > RAM_UNCACHED
}
